{"code":0,"msg":null,"data":{"id":"43","vcIndexsetId":"IDX202206274220129281","vcTypeId":"ITI202206275723750407","vcIndexsetName":"产品清单","vcTypeName":null,"vcIndexsetLabelCode":"1575420741564895232","vcIndexsetLabelName":"RptProductList","vcCaclName":"VAI202206245318656005","vcCaclNameName":"产品控制指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"java","vcValueMethodName":"Java","vcIndexsetDescribe":"查询所有产品","vcDateScript":"/**!!!vcIndexsetParamCode:prodCodes,vcIndexsetParamExplain:产品代码,vcIndexsetParamType:String,vcIsrequired:false!!!**/\r\n/**!!!vcIndexsetParamCode:tradeDate,vcIndexsetParamExplain:交易日期,vcIndexsetParamType:String,vcIsrequired:false!!!**/\r\n/**!!!vcIndexsetParamCode:prodTypes,vcIndexsetParamExplain:产品类型,vcIndexsetParamType:String,vcIsrequired:false!!!**/\r\n/**!!!vcIndexsetParamCode:isFilter,vcIndexsetParamExplain:包含过期,vcIndexsetParamType:String,vcIsrequired:false!!!**/\r\n/**```vcIndexsetReturnCode:PROD_CODE,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:PROD_NAME,vcIndexsetReturnName:产品简称,vcIndexsetReturnType:String```**/\r\n\r\npackage com.kaiyufound.financehtzg.reports;\r\n\r\nimport com.kaiyufound.common.MapParser;\r\nimport com.kaiyufound.common.bo.Result;\r\nimport com.kaiyufound.common.bo.ResultRow;\r\nimport com.kaiyufound.common.constant.TableConsts;\r\nimport com.kaiyufound.common.def.DataType;\r\nimport com.kaiyufound.common.util.CollectionUtil;\r\nimport com.kaiyufound.common.util.NullUtil;\r\nimport com.kaiyufound.core.cache.RowDO;\r\nimport com.kaiyufound.core.index.DataManager;\r\nimport com.kaiyufound.core.index.DataQuery;\r\nimport com.kaiyufound.framework.service.BaseIndicator;\r\n\r\nimport java.util.*;\r\nimport java.util.stream.Collectors;\r\n\r\n/**\r\n * @author juhn\r\n * @version 1.0.0\r\n * @ClassName RptProdList.java\r\n * @Description 产品清单\r\n * @createTime 2022年06月24日 18:08:00\r\n */\r\npublic class RptProductList extends BaseIndicator {\r\n    @Override\r\n    public Result process(Map<String, Object> parameters) {\r\n        MapParser mapParser = new MapParser(parameters);\r\n        Result result = initResult(parameters);\r\n        String[] prodCodes = mapParser.parseStringArray(\"prodCodes\");\r\n        String isFilter = mapParser.parseString(\"isFilter\");\r\n        if (CollectionUtil.isNotEmpty(prodCodes)) {\r\n            for (String prodCode : prodCodes) {\r\n                DataQuery prodInfoQuery = DataManager.getInst().getQuery(TableConsts.PD_PROD_INFO, \"PROD_CODE_IDX\");\r\n                RowDO rowDO = prodInfoQuery.queryOneByKey(prodCode);\r\n                if (rowDO != null) {\r\n                    String prodShrt = rowDO.getValue(\"PROD_SHRT_NAME\");\r\n                    ResultRow resultRow = result.newResultRow();\r\n                    resultRow.putValue(\"PROD_CODE\", prodCode);\r\n                    resultRow.putValue(\"PROD_NAME\", prodShrt);\r\n                }\r\n            }\r\n        } else {\r\n            Integer tradeDate = mapParser.parseInteger(\"tradeDate\");\r\n            String[] prodTypes = mapParser.parseStringArray(\"prodTypes\");// 产品类型\r\n            DataQuery prodInfoQuery = DataManager.getInst().getQuery(TableConsts.PD_PROD_INFO, \"PROD_CODE_IDX\");\r\n            List<RowDO> rowDOS = new ArrayList<>();\r\n            rowDOS = prodInfoQuery.queryAndMatch(s -> true);\r\n            // 产品类型过滤\r\n            if (!(prodTypes == null || prodTypes.length == 0)) {\r\n                List<String> scrTypeList = Arrays.asList(prodTypes);\r\n                rowDOS = rowDOS.stream().filter(rowDO ->\r\n                        scrTypeList.contains((String) rowDO.getValue(\"PROD_TYPE\"))\r\n                ).collect(Collectors.toList());\r\n            }\r\n            // 估值首日 - 份额清盘日 时间区间过滤\r\n            if (!(tradeDate == null || tradeDate == 0)) {\r\n                rowDOS = rowDOS.stream().filter(rowDO ->\r\n                        Objects.isNull(rowDO.getValue(\"SHR_LIQ_DT\")) ?\r\n                                (tradeDate >= (Integer) rowDO.getValue(\"VAL_FST_DT\")) :\r\n                                (tradeDate >= (Integer) rowDO.getValue(\"VAL_FST_DT\") && tradeDate < (Integer) rowDO.getValue(\"SHR_LIQ_DT\"))\r\n\r\n                ).collect(Collectors.toList());\r\n            }\r\n\r\n            if (!NullUtil.isNull(isFilter)){\r\n                if (isFilter.equalsIgnoreCase(\"N\") || isFilter.equalsIgnoreCase(\"NO\") || isFilter.equals(\"否\")) {\r\n                    rowDOS = prodInfoQuery.queryAndMatch(null);\r\n                }\r\n            }\r\n\r\n            TreeMap<Integer, List<RowDO>> treeMap = new TreeMap<>();\r\n            for (RowDO rowDO : rowDOS) {\r\n                String prodType = rowDO.getValue(\"PROD_TYPE\");\r\n                Integer prodTypeCode = Integer.parseInt(prodType);\r\n                if (!treeMap.containsKey(prodTypeCode)) {\r\n                    List<RowDO> list = new ArrayList<>();\r\n                    list.add(rowDO);\r\n                    treeMap.put(prodTypeCode, list);\r\n                } else {\r\n                    treeMap.get(prodTypeCode).add(rowDO);\r\n                }\r\n            }\r\n\r\n            treeMap.values().forEach(rowDOList -> {\r\n                rowDOList.sort((o1, o2) -> {\r\n                    String prodCode1 = o1.getValue(\"PROD_CODE\");\r\n                    String prodCode2 = o2.getValue(\"PROD_CODE\");\r\n                    return prodCode1.compareTo(prodCode2);\r\n                });\r\n                for (RowDO rowDO : rowDOList) {\r\n                    String prodCode = rowDO.getValue(\"PROD_CODE\");\r\n                    String prodShrt = rowDO.getValue(\"PROD_SHRT_NAME\");\r\n\r\n                    ResultRow resultRow = result.newResultRow();\r\n                    resultRow.putValue(\"PROD_CODE\", prodCode);\r\n                    resultRow.putValue(\"PROD_NAME\", prodShrt);\r\n                }\r\n            });\r\n        }\r\n        result.setPrimaryKeys(\"PROD_CODE\");\r\n        return result;\r\n    }\r\n\r\n    @Override\r\n    protected void addHeader(Result result) {\r\n        result.addHeader(\"PROD_CODE\", \"产品代码\", DataType.STRING);\r\n        result.addHeader(\"PROD_NAME\", \"产品简称\", DataType.STRING);\r\n    }\r\n}","vcIndexsetStatus":"1","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-06-27 16:06:39","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-11-24 20:01:57","vcVersionId":"1595749558699298816","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"1","pageSize":null,"pageNo":null,"indexsetParamInfoList":[{"vcIndexsetParamId":null,"vcIndexsetId":"IDX202206274220129281","vcIndexsetParamCode":"prodCodes","vcIndexsetParamExplain":"产品代码","vcIndexsetParamType":"String","vcIndexsetParamDefault":"850003,850004","vcIndexsetParamDefaultKey":null,"vcIsrequired":"false","vcCreateUser":"44","vcUpdateUser":"44","vcVersionId":"1595749558699298816","vcVersionDate":"2022-11-24 20:01:57","paramSort":"1","vcParamtypeValueFrom":null,"vcParamtypeValueStatus":null,"vcParamInputType":"TEXT","vcDictSource":null,"dupdate":"2022-11-24 20:01:57","dcrete":"2022-11-24 20:01:57"},{"vcIndexsetParamId":null,"vcIndexsetId":"IDX202206274220129281","vcIndexsetParamCode":"tradeDate","vcIndexsetParamExplain":"交易日期","vcIndexsetParamType":"String","vcIndexsetParamDefault":"20220825","vcIndexsetParamDefaultKey":null,"vcIsrequired":"false","vcCreateUser":"44","vcUpdateUser":"44","vcVersionId":"1595749558699298816","vcVersionDate":"2022-11-24 20:01:57","paramSort":"2","vcParamtypeValueFrom":null,"vcParamtypeValueStatus":null,"vcParamInputType":"TEXT","vcDictSource":null,"dupdate":"2022-11-24 20:01:57","dcrete":"2022-11-24 20:01:57"},{"vcIndexsetParamId":null,"vcIndexsetId":"IDX202206274220129281","vcIndexsetParamCode":"prodTypes","vcIndexsetParamExplain":"产品类型","vcIndexsetParamType":"String","vcIndexsetParamDefault":null,"vcIndexsetParamDefaultKey":null,"vcIsrequired":"false","vcCreateUser":"44","vcUpdateUser":"44","vcVersionId":"1595749558699298816","vcVersionDate":"2022-11-24 20:01:57","paramSort":"3","vcParamtypeValueFrom":"PROD_TYPE","vcParamtypeValueStatus":null,"vcParamInputType":"SELECT-MULT","vcDictSource":null,"dupdate":"2022-11-24 20:01:57","dcrete":"2022-11-24 20:01:57"},{"vcIndexsetParamId":null,"vcIndexsetId":"IDX202206274220129281","vcIndexsetParamCode":"isFilter","vcIndexsetParamExplain":"包含过期","vcIndexsetParamType":"String","vcIndexsetParamDefault":null,"vcIndexsetParamDefaultKey":null,"vcIsrequired":"false","vcCreateUser":"44","vcUpdateUser":"44","vcVersionId":"1595749558699298816","vcVersionDate":"2022-11-24 20:01:57","paramSort":"4","vcParamtypeValueFrom":null,"vcParamtypeValueStatus":null,"vcParamInputType":"TEXT","vcDictSource":null,"dupdate":"2022-11-24 20:01:57","dcrete":"2022-11-24 20:01:57"}],"indexsetResultInfos":[{"vcIndexsetReturnId":null,"vcIndexsetId":"IDX202206274220129281","vcIndexsetReturnCode":"PROD_CODE","vcIndexsetReturnName":"产品代码","vcIndexsetReturnType":"String","vcIndexsetReturnExample":null,"vcRemarks":null,"vcCreateUser":"44","vcUpdateUser":"44","vcVersionId":"1595749558699298816","vcPolymerizeType":"OFF","vcPolymerizeTypeName":"不选择","vcIndexsetReturnPid":null,"dupdate":"2022-11-24 20:01:57","dcrete":null},{"vcIndexsetReturnId":null,"vcIndexsetId":"IDX202206274220129281","vcIndexsetReturnCode":"PROD_NAME","vcIndexsetReturnName":"产品简称","vcIndexsetReturnType":"String","vcIndexsetReturnExample":null,"vcRemarks":null,"vcCreateUser":"44","vcUpdateUser":"44","vcVersionId":"1595749558699298816","vcPolymerizeType":"OFF","vcPolymerizeTypeName":"不选择","vcIndexsetReturnPid":null,"dupdate":"2022-11-24 20:01:57","dcrete":null}]}}