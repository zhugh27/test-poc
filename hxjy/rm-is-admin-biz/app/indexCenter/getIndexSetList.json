{"code":0,"msg":null,"data":{"pageNum":1,"pageSize":100,"total":10,"config":null,"columns":[{"width":189,"title":"指标集编号","key":"vcIndexsetId","maxWidth":0},{"width":163,"title":"指标集名称","key":"vcIndexsetName","maxWidth":0},{"width":198,"title":"分组","key":"vcTypeId","maxWidth":300},{"width":102,"title":"取值方式","key":"vcValueMethod","maxWidth":0},{"width":102,"title":"计算对象","key":"vcCaclNameName","maxWidth":0},{"width":82,"title":"状态","key":"vcIndexsetStatus","maxWidth":0},{"width":127,"title":"指标集标签","key":"vcIndexsetLabelCode","maxWidth":300},{"width":63,"title":"排序","key":"sort","maxWidth":0},{"width":160,"title":"创建时间","key":"dCreate","maxWidth":0},{"width":85,"title":"创建人","key":"vcCrateUserName","maxWidth":0},{"width":160,"title":"修改时间","key":"dUpdate","maxWidth":0},{"width":85,"title":"修改人","key":"vcUpdateUserName","maxWidth":0}],"tableData":[{"id":"3235","vcIndexsetId":"IDX10003334","vcTypeId":"指标集示例-Java指标集","vcIndexsetName":"表对比信息","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI10000102","vcCaclNameName":"产品指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"Java","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**```vcIndexsetReturnCode:tableName,vcIndexsetReturnName:表名,vcIndexsetReturnType:String```**/\n/**```vcIndexsetReturnCode:memInfo,vcIndexsetReturnName:内存信息,vcIndexsetReturnType:String```**/\n/**```vcIndexsetReturnCode:dataBaseInfo,vcIndexsetReturnName:数据库信息,vcIndexsetReturnType:String```**/\n/**```vcIndexsetReturnCode:isSame,vcIndexsetReturnName:是否一致,vcIndexsetReturnType:String```**/\n\n\npackage com.kaiyufound.finance.system;\n\nimport com.kaiyufound.common.MapParser;\nimport com.kaiyufound.common.bo.Result;\nimport com.kaiyufound.common.bo.ResultRow;\nimport com.kaiyufound.common.def.DataType;\nimport com.kaiyufound.common.util.NullUtil;\nimport com.kaiyufound.core.cache.TableCaches;\nimport com.kaiyufound.core.conf.TableConf;\nimport com.kaiyufound.core.conf.TableConfManager;\nimport com.kaiyufound.core.source.CnDataSources;\nimport com.kaiyufound.framework.service.BaseIndicator;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport javax.sql.DataSource;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport static cn.hutool.db.DbUtil.close;\n\n/**\n * @author wuf\n * @date 2022/11/22\n */\npublic class DataCheckMemAndDataBase extends BaseIndicator {\n    private final static Logger logger = LoggerFactory.getLogger(DataCheckMemAndDataBase.class);\n\n    @Override\n    public Result process(Map<String, Object> parameters) {\n        Result result = initResult(parameters);\n        MapParser mapParser = new MapParser(parameters);\n        String tableNameStr = mapParser.parseString(\"tableName\");\n\n        List<String> dataBaseTableNames = new ArrayList<>();\n        if (NullUtil.isNull(tableNameStr)) {\n            dataBaseTableNames = TableConfManager.getInstance().getTableNames(); //getCnDataTableData();\n        } else {\n            dataBaseTableNames.add(tableNameStr);\n        }\n\n        for (String dataBaseTableName : dataBaseTableNames) {\n            Map<String, Object> memoryInfo = getFromMemory(dataBaseTableName);\n            if (memoryInfo.size() <= 0) {\n                continue;\n            }\n            long memMaxDsId = (long) memoryInfo.get(\"maxId\");\n            long memMinDsId = (long) memoryInfo.get(\"minId\");\n            long memCountNum = (int) memoryInfo.get(\"count\");\n            String memWhereColumn = (String) memoryInfo.get(\"memWhereColumn\");\n            Map<String, Long> dbInfo = getFromDB(dataBaseTableName, memWhereColumn);\n            if (dbInfo.size() <= 0) {\n                continue;\n            }\n            long dbMaxDsId = dbInfo.get(\"maxId\");\n            long dbMinDsId = dbInfo.get(\"minId\");\n            long dbCountNum = dbInfo.get(\"count\");\n            String isSame = \"不一致\";\n            if (memMaxDsId == dbMaxDsId && memMinDsId == dbMinDsId && memCountNum == dbCountNum) {\n                isSame = \"一致\";\n            }\n            ResultRow resultRow = result.newResultRow();\n            resultRow.putValue(\"tableName\", dataBaseTableName);\n            resultRow.putValue(\"memInfo\", (\"memCount = \" + memCountNum + \" memMinId = \" + memMinDsId + \" memMaxId = \" + memMaxDsId + \" where \" + memWhereColumn));\n            resultRow.putValue(\"dataBaseInfo\", (\"dbCount = \" + dbCountNum + \" dbMinId = \" + dbMinDsId + \" dbMaxId = \" + dbMaxDsId + \" where \" + memWhereColumn));\n            resultRow.putValue(\"isSame\", isSame);\n        }\n\n        return result;\n    }\n\n    /**\n     * 从内存中加载表信息\n     */\n    private Map<String, Object> getFromMemory(String tableName) {\n        TableConf tableConf = TableConfManager.getInstance().getTableConf(tableName);\n        if (tableConf != null && tableConf.getDataSource() != null && tableConf.getDataSource() != \"\") {\n            String dataSource = tableConf.getDataSource();\n            if (\"data\".equals(dataSource)) {\n                try {\n                    Map<String, Object> tableInfo = TableCaches.getInstance().get(tableName).getTableInfo();\n                    String whereColumn = tableConf.getWhere();\n\n                    tableInfo.put(\"memWhereColumn\", whereColumn);\n                    return tableInfo;\n                } catch (Exception e) {\n                    logger.error(tableName + \" getTableInfo error\", e);\n                }\n            }\n        }\n\n        return new HashMap<>();\n    }\n\n\n    /**\n     * 获取tableconf中全部表信息\n     */\n    public List<String> getCnDataTableData() {\n        List<String> tableNameList = new ArrayList<>();\n        ResultSet rs = null;\n        PreparedStatement ps = null;\n        Connection con = null;\n        DataSource dataSource = CnDataSources.getInstance().getDataSource(\"meta\");\n\n        try {\n            con = dataSource.getConnection();\n            StringBuilder builder = new StringBuilder();\n            builder.append(\"SELECT TABLE_NAME\").append(\" FROM \").append(\"CN_DATA_TABLE_CONF\").append(\" WHERE DATA_SOURCE_NAME = 'data' \");\n            String sql = builder.toString();\n\n            ps = con.prepareStatement(sql);\n            rs = ps.executeQuery();\n            while (rs.next()) {\n                String tableName = rs.getString(\"TABLE_NAME\");\n                tableNameList.add(tableName);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            close(con, ps, rs);\n        }\n        return tableNameList;\n    }\n\n    /**\n     * 从数据库中加载表信息\n     */\n    private Map<String, Long> getFromDB(String tableName, String whereColumn) {\n        Map<String, Long> map = new HashMap<>();\n        ResultSet rs = null;\n        PreparedStatement ps = null;\n        Connection con = null;\n        DataSource dataSource = CnDataSources.getInstance().getDataSource(\"data\");\n        try {\n            con = dataSource.getConnection();\n            StringBuilder builder = new StringBuilder();\n            builder.append(\"SELECT MAX(DS_ID) AS MAX_DS_ID,MIN(DS_ID) AS MIN_DS_ID,COUNT(1) AS COUNT_NUM\").append(\" FROM \" + tableName).append(\" WHERE \").append(\"1=1 \").append(whereColumn == null ? \" \" : \"and \" + whereColumn);\n            String sql = builder.toString();\n            ps = con.prepareStatement(sql);\n            rs = ps.executeQuery();\n            while (rs.next()) {\n                long maxDsId = rs.getLong(\"MAX_DS_ID\");\n                long minDsId = rs.getLong(\"MIN_DS_ID\");\n                long countNum = rs.getLong(\"COUNT_NUM\");\n                map.put(\"maxId\", maxDsId);\n                map.put(\"minId\", minDsId);\n                map.put(\"count\", countNum);\n            }\n        } catch (Exception e) {\n            logger.error(\"DataCheckMemAndDataBase getFromDB error\", e);\n        } finally {\n            close(con, ps, rs);\n        }\n\n        return map;\n    }\n\n    @Override\n    public Result initResult() {\n        Result result = new Result();\n        result.addHeader(\"tableName\", \"表名\", DataType.STRING);\n        result.addHeader(\"memInfo\", \"内存信息\", DataType.STRING);\n        result.addHeader(\"dataBaseInfo\", \"数据库信息\", DataType.STRING);\n        result.addHeader(\"isSame\", \"是否一致\", DataType.STRING);\n        return result;\n    }\n}","vcIndexsetStatus":"已生效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2024-03-01 09:04:40","vcUpdateUser":null,"vcUpdateUserName":null,"dUpdate":null,"vcVersionId":"1763370014905339904","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":null,"pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"1983","vcIndexsetId":"IDX10002402","vcTypeId":"指标集示例-Python指标集","vcIndexsetName":"相关性矩阵","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI10000102","vcCaclNameName":"产品指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"Python","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"\"\"\"!!!vcIndexsetParamCode:code,vcIndexsetParamExplain:代码,vcIndexsetParamType:TEXT,vcIsrequired:true!!!\"\"\"\r\n\"\"\"```vcIndexsetReturnCode:code,vcIndexsetReturnName:代码,vcIndexsetReturnType:String```\"\"\"\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\npython 产品持股风格\r\n\"\"\"\r\nimport os\r\nfrom typing import Dict\r\nfrom kaiyulib.conf.env import Environment\r\nfrom kaiyulib.utils.logger_util import LoggerUtil\r\nfrom mpps.core.client import MppsClient\r\nimport numpy as np\r\nimport time\r\nimport pandas as pd\r\nimport traceback\r\nfrom scipy.optimize import minimize\r\n\r\n\r\ndef run(**kwargs):\r\n    # type: (any) -> Dict[str, list]\r\n    \"\"\"\r\n    跑批资产明细持股风格\r\n    IDX10000822\r\n    :param kwargs: dict (map格式) 格式参数, 由服务端动态传递\r\n    :return:\r\n    \"\"\"\r\n    RES_COLUMNS = [\"scrId\", \"tradeDate\", \"type\"]\r\n    result_data = {}\r\n    for columns in RES_COLUMNS:\r\n        result_data[columns] = []\r\n    tradeDate = int(kwargs['tradeDate'])\r\n\r\n    asset_info_request = MppsClient.create_request()\r\n    index_codes = get_all_index_code()\r\n\r\n    asset_info_request.add_service(\"RptAllStockInfo\")\r\n    index_quot_request = MppsClient.create_request()\r\n    index_quot_request.add_service(\"RptProdStockTypeIndexQuotInfo\", codes=index_codes, startDate=tradeDate, endDate=tradeDate)\r\n\r\n\r\n    client = MppsClient()\r\n    with client:\r\n        index_quot_result = client.execute(index_quot_request)\r\n        all_stock_info_result = client.execute(asset_info_request)\r\n    index_quot_dict = index_quot_result.get_values()\r\n    index_quot_df = pd.DataFrame(index_quot_dict)\r\n    index_quot_df = index_quot_df.drop_duplicates()\r\n    index_quot_pivot_df = index_quot_df.pivot('trdDt', 'indexCode', 'chgPct')\r\n    index_quot_pivot_df = index_quot_rename(index_quot_pivot_df)\r\n    if index_quot_pivot_df is None or len(index_quot_pivot_df.columns) != 6:\r\n        LoggerUtil.get_logger(\"indicator\").error(\"指数行情缺失\")\r\n        return result_data\r\n\r\n\r\n    codes = pd.DataFrame(all_stock_info_result.get_values())['code'].tolist()\r\n    n = 10\r\n    codeList = [codes[i:i+n] for i in range(0, len(codes), n)]\r\n    import time\r\n    t1 = time.time()\r\n    thread_list = []\r\n    import threading\r\n    from multiprocessing import Process,Manager\r\n    # res_list = Manager().list()\r\n    res_list = []\r\n    for assets in codeList:\r\n        # t = threading.Thread(target=calcAssetType, args=(tradeDate, res_list, index_quot_pivot_df, assets))\r\n        # thread_list.append(t)\r\n        # t.start()\r\n        calcAssetType(tradeDate, res_list, index_quot_pivot_df, assets)\r\n        # proc = Process(target=calcAssetType, args=(tradeDate, res_list, index_quot_pivot_df, assets))\r\n        # thread_list.append(proc)\r\n        # proc.start()\r\n    # for thread in thread_list:\r\n    #     thread.join()\r\n    t2 = time.time()\r\n    # 4386\r\n    if len(res_list) == 0:\r\n        return result_data\r\n    res_df = pd.concat(res_list)\r\n    LoggerUtil.get_logger(\"indicator\").info(\"%d结果长度%d\"%(tradeDate, len(res_df)))\r\n    LoggerUtil.get_logger(\"indicator\").info(\"%d总共耗时--%f\"%(tradeDate, t2-t1))\r\n    res_df['tradeDate'] = tradeDate\r\n    res_df = replace_type_map(res_df)\r\n    for column in result_data.keys():\r\n        result_data[column] = res_df[column].values.tolist()\r\n    return result_data\r\n\r\n\r\n\r\n\r\ndef calcAssetType(tradeDate, res_list, index_quot_pivot_df, codes):\r\n    client = MppsClient()\r\n    asset_quot_request = MppsClient.create_request()\r\n    asset_quot_request.add_service(\"RptStockYield\", tradeDate=tradeDate)\r\n    with client:\r\n        code_str = \",\".join(codes)\r\n        asset_quot_request.add_request_param(codes=code_str)\r\n        stock_quot_result = client.execute(asset_quot_request)\r\n\r\n    stock_quot_dict = stock_quot_result.get_values()\r\n    stock_quot_df = pd.DataFrame(stock_quot_dict)\r\n\r\n    for code in codes:\r\n        scr_quot_info = stock_quot_df[stock_quot_df['code'] == code]\r\n        if scr_quot_info.empty:\r\n            LoggerUtil.get_logger(\"indicator\").error(\"资产%s收益率为空\" % code)\r\n            continue\r\n        scr_quot_info = scr_quot_info.drop_duplicates()\r\n        scr_quot_info_pivot = scr_quot_info.pivot('tradeDate', 'code', 'value')\r\n        scr_param = Market_Style_Param(index_quot_pivot_df, scr_quot_info_pivot, code,\r\n                                       scr_quot_info_pivot.index[0],\r\n                                       scr_quot_info_pivot.index[-1])\r\n        fund_type_df = Market_Style_Exposure(scr_param)\r\n        res_list.append(fund_type_df)\r\n\r\n\r\n\r\ndef replace_type_map(prod_stock_type_res):\r\n    columns = [\"大盘价值\", \"中盘价值\", \"小盘价值\", \"大盘平衡\", \"中盘平衡\", \"小盘平衡\", \"大盘成长\", \"中盘成长\", \"小盘成长\"]\r\n    value = ['value_b', 'value_m', 'value_s', 'balance_b', 'balance_m', 'balance_s', 'grow_b', 'grow_m', 'grow_s']\r\n    prod_stock_type_res['type_name'] = prod_stock_type_res['type']\r\n    for i in range(len(value)):\r\n        prod_stock_type_res['type'] = prod_stock_type_res['type'].replace(columns[i], value[i])\r\n    return prod_stock_type_res\r\n\r\n##不适用于货币型基金\r\ndef Market_Style_Exposure(self):\r\n    index_list = [\"大盘成长\", \"大盘价值\", \"中盘成长\", \"中盘价值\", \"小盘成长\", \"小盘价值\"]\r\n    style_index_return = self.index_data[index_list]  # index_data本身就是收益率\r\n    adj_return = self.adj_nav[self.code].pct_change()\r\n    mix = pd.merge(adj_return, style_index_return, left_index=True, right_index=True, how='inner').dropna()\r\n    if len(mix) > 15:\r\n        A1 = np.array(mix[index_list])\r\n        b1 = np.array(mix[self.code])\r\n\r\n        # b1是y，即基金收益率序列，A1是因子矩阵，即指数序列\r\n\r\n        num_x = np.shape(A1)[1]\r\n\r\n        def my_func(x):\r\n            ls = (b1 - np.dot(A1, x)) ** 2\r\n            result = np.sum(ls)\r\n            return result\r\n\r\n        def g1(x):\r\n            return np.sum(x) - 1\r\n\r\n        cons = ({'type': 'eq', 'fun': g1})  # 约束条件：eq：g1等于0，ineq：g1大于等于0\r\n\r\n        bnds = [(0, 1)] * 6\r\n        x = np.zeros(num_x)  # Initial guess\r\n\r\n        res1 = minimize(my_func, x, bounds=bnds, constraints=cons)  # , method='SLSQP'\r\n        res = pd.concat([pd.DataFrame([[self.code, mix.index.min(), mix.index.max()]],\r\n                                      columns=['scrId', 'start_date', 'end_date']),\r\n                         (pd.DataFrame([res1.x], columns=index_list))], axis=1)\r\n        whole_type = get_style(res)\r\n        res['type'] = whole_type\r\n    else:\r\n        res = None\r\n        return res\r\n    res = res[['scrId','type']]\r\n    return res\r\n\r\n\r\ndef get_style(df):\r\n    # 先判断大盘\r\n    columns = [\"大盘成长\", \"大盘价值\", \"中盘成长\", \"中盘价值\", \"小盘成长\", \"小盘价值\"]\r\n    big_grow = df.loc[0, '大盘成长']\r\n    mid_grow = df.loc[0, '中盘成长']\r\n    min_grow = df.loc[0, '小盘成长']\r\n\r\n    big_value = df.loc[0, '大盘价值']\r\n    mid_value = df.loc[0, '中盘价值']\r\n    min_value = df.loc[0, '小盘价值']\r\n    big_sum = big_grow + big_value\r\n    mid_sum = mid_grow + mid_value\r\n    min_sum = min_grow + min_value\r\n\r\n    if big_sum > mid_sum and big_sum > min_sum:\r\n        scale = '大盘'\r\n    elif mid_sum > big_sum and mid_sum > min_sum:\r\n        scale = '中盘'\r\n    else:\r\n        scale = '小盘'\r\n\r\n    value_sum = big_value + mid_value + min_value\r\n    grow_sum = big_grow + mid_grow + min_grow\r\n    balance = value_sum - grow_sum\r\n    # if balance < 1/3:\r\n    #     style = \"成长型\"\r\n    # elif balance > 1/3:\r\n    #     style = \"价值型\"\r\n    # elif balance >= -1/3 and balance <= 1/3:\r\n    #     style = \"平衡型\"\r\n\r\n    if balance >= -1 / 3 and balance <= 1 / 3:\r\n        style = \"平衡\"\r\n    elif balance < -1 / 3:\r\n        style = \"成长\"\r\n    elif balance > 1 / 3:\r\n        style = \"价值\"\r\n\r\n    whole_type = scale + style\r\n    return whole_type\r\n\r\n\r\nclass Market_Style_Param():\r\n    def __init__(self, index_data, adj_nav, code, start_date, end_date):\r\n        self.index_data = index_data\r\n        self.adj_nav = adj_nav\r\n        self.code = code\r\n        self.start_date = start_date\r\n        self.end_date = end_date\r\n\r\n\r\ndef index_quot_rename(index_quot_pivot_df):\r\n    try:\r\n        index_quot_pivot_df = index_quot_pivot_df.rename(columns={'399372.SZ': '大盘成长', '399373.SZ': '大盘价值',\r\n                                                                  '399374.SZ': '中盘成长', '399375.SZ': '中盘价值',\r\n                                                                  '399376.SZ': '小盘成长', '399377.SZ': '小盘价值'})\r\n        return index_quot_pivot_df\r\n    except Exception as e:\r\n        LoggerUtil.get_logger(\"indicator\").error(\"行情指数转换错误\")\r\n        return None\r\n\r\n\r\ndef get_all_index_code():\r\n    index_codes = \"399372.SZ,399373.SZ,399374.SZ,399375.SZ,399376.SZ,399377.SZ\"\r\n    return index_codes\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # 本地开发调试入口, 此代码不会被服务动态编译\r\n\r\n    # 读取配置\r\n    root_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n    config_path = os.path.join(root_path, \"etc\", \"config.yaml\")\r\n    env = Environment()\r\n    env.init_config(config_path)\r\n\r\n    # 测试时, 使用日志方式(简易版, 在控制台查看)\r\n    LoggerUtil.set_debug(True)\r\n    params = dict()\r\n    params[\"tradeDate\"] = 20210803\r\n    t1 = time.time()\r\n    res = run(**params)\r\n    t2 = time.time()\r\n    print(res)\r\n    print(t2 - t1)","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2023-04-07 14:05:51","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2024-01-02 17:07:14","vcVersionId":"1742110289937174528","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":null,"pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"264","vcIndexsetId":"IDX202207278860446729","vcTypeId":"指标集示例-Url指标集","vcIndexsetName":"URL指标集调用示例","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI202207223344588808","vcCaclNameName":"其他","vcIndexsetFrom":"计算引擎","vcValueMethod":"Url","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":null,"vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-07-27 17:38:13","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-07-28 15:52:45","vcVersionId":"1552562691279818752","vcReleaseStatus":null,"vcRequest":"POST","vcRequestAddr":"http://192.168.0.62:60000/rm-is-admin-biz/app/indexCenter/getExcIndexSetTrial","vcRequestParam":"{\r\n\t\"id\": \"102\",\r\n\t\"vcIndexsetId\": \"IDX202207077674188801\",\r\n\t\"pageNo\": 1,\r\n\t\"pageSize\": 100,\r\n\t\"indexsetParamInfoList\": []\r\n}","vcMd5":null,"sort":null,"pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"402","vcIndexsetId":"IDX202208189166530567","vcTypeId":"指标集示例","vcIndexsetName":"产品净值（demo）","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI202206245318656005","vcCaclNameName":"产品控制指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"Java","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**!!!vcIndexsetParamCode:prodCodes,vcIndexsetParamExplain:产品范围,vcIndexsetParamType:TEXT,vcIsrequired:true!!!**/\r\n/**!!!vcIndexsetParamCode:tradeDate,vcIndexsetParamExplain:交易日期,vcIndexsetParamType:LIST,vcIsrequired:true!!!**/\r\n/**```vcIndexsetReturnCode:prodCode,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:unitNetValue,vcIndexsetReturnName:单位净值,vcIndexsetReturnType:Double```**/\r\n/**```vcIndexsetReturnCode:accNetValue,vcIndexsetReturnName:累计净值,vcIndexsetReturnType:Double```**/","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-08-18 12:48:32","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-10-19 20:20:13","vcVersionId":"1582708194940162048","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"0","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"261","vcIndexsetId":"IDX202207262534589447","vcTypeId":"指标集示例-Python指标集","vcIndexsetName":"杠杆率","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI202206245318656005","vcCaclNameName":"产品控制指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"Python","vcValueMethodName":null,"vcIndexsetDescribe":"测试: 总资产/资产净值=杠杆率","vcDateScript":"\"\"\"!!!vcIndexsetParamCode:codes,vcIndexsetParamExplain:产品代码,vcIndexsetParamType:TEXT,vcIsrequired:true!!!\"\"\"\r\n\"\"\"!!!vcIndexsetParamCode:tradeDate,vcIndexsetParamExplain:交易日期,vcIndexsetParamType:TEXT,vcIsrequired:true!!!\"\"\"\r\n\"\"\"```vcIndexsetReturnCode:prodCode,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```\"\"\"\r\n\"\"\"```vcIndexsetReturnCode:leverage,vcIndexsetReturnName:杠杆率,vcIndexsetReturnType:Double```\"\"\"\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\npython 指标开发示例\r\n\"\"\"\r\nimport os\r\nfrom typing import Dict\r\nfrom kaiyulib.conf.env import Environment\r\nfrom kaiyulib.utils.logger_util import LoggerUtil\r\nfrom mpps.core.client import MppsClient\r\n\r\n\r\ndef run(**kwargs):\r\n    # type: (any) -> Dict[str, list]\r\n    \"\"\"\r\n    指标计算逻辑\r\n    :param kwargs: dict (map格式) 格式参数, 由服务端动态传递\r\n    :return:\r\n    \"\"\"\r\n    LoggerUtil.get_logger(\"indicator\").debug(\"请求参数:\\n %s\", kwargs)\r\n    # 构造请求体、或添加service或者修改相关参数\r\n    request = MppsClient.create_request()\r\n\r\n    # 添加或者修改相关参数, 格式: request.add_request_param(参数1=\"\", 参数2=\"\")\r\n    request.add_request_param(codes=kwargs[\"codes\"])\r\n    # 添加service, 格式: request.add_service(\"指标名称\", 参数1=\"\", 参数2=\"\")\r\n    request.add_service(\"INDEX202207157675499536\")\r\n    request.add_service(\"INDEX202207154260556815\")\r\n    request.add_service(\"INDEX202206293517071371\", tradeDate=kwargs[\"tradeDate\"])\r\n    request.add_service(\"INDEX202206298022533138\", tradeDate=kwargs[\"tradeDate\"])\r\n\r\n    # 添加公共参数, 格式: request.add_global_param(参数1=\"\", 参数2=\"\")\r\n    # 支持aggregation、aggFunction、timeSeries、startDate、endDate、sort、where\r\n\r\n    # 输出日志方式 LoggerUtil.get_logger(\"indicator\").info(\"日志内容\")\r\n    # LoggerUtil.get_logger(\"indicator\").debug(\"日志内容\")\r\n    LoggerUtil.get_logger(\"indicator\").debug(\"请求信息:\\n %s\", request.get_request())\r\n\r\n    # 调用客户端并执行查询, 内部自动获取了请求连接, 且根据host地址随机\r\n    # 使用with, 如果不是一次请求, 建议手动调用 connect、close, close之前可以利用连接重复执行, 减少http tcp握手次数\r\n    client = MppsClient()\r\n    with client:\r\n        result = client.execute(request)\r\n\r\n    # 数据处理逻辑, 例如合并多个指标结果集, 并返回\r\n    indicators = result.get_values()\r\n    LoggerUtil.get_logger(\"indicator\").debug(\"返回结果:\\n %s\", indicators)\r\n    # xxx 指标逻辑\r\n    # 测试: 总资产/资产净值=杠杆率\r\n    result_data = dict()\r\n    result_data[\"prodCode\"] = indicators[\"prodCode\"]\r\n    result_data[\"leverage\"] = []\r\n    for i, asset in enumerate(indicators[\"totAsset\"]):\r\n        nav = indicators[\"totNav\"][i]\r\n        if asset is not None and nav is not None:\r\n            result_data[\"leverage\"].append(asset/nav)\r\n        else:\r\n            result_data[\"leverage\"].append(None)\r\n    LoggerUtil.get_logger(\"indicator\").debug(\"计算结果:\\n %s\", result_data)\r\n    return result_data\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # 本地开发调试入口, 此代码不会被服务动态编译\r\n\r\n    # 读取配置\r\n    root_path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n    config_path = os.path.join(root_path, \"etc\", \"config.yaml\")\r\n    env = Environment()\r\n    env.init_config(config_path)\r\n\r\n    # 测试时, 使用日志方式(简易版, 在控制台查看)\r\n    LoggerUtil.set_debug(True)\r\n    params = dict()\r\n    params[\"codes\"] = \"850010,850013\"\r\n    params[\"tradeDate\"] = \"20210603\"\r\n    run(**params)","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-07-26 14:15:10","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-07-26 14:56:16","vcVersionId":"1551823701102694400","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"0","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"687","vcIndexsetId":"IDX10000250","vcTypeId":"指标集示例-Java指标集","vcIndexsetName":"持仓明细","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI10000102","vcCaclNameName":"产品指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"Java","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**!!!vcIndexsetParamCode:codes,vcIndexsetParamExplain:产品代码,vcIndexsetParamType:LIST,vcIsrequired:false!!!**/\n/**!!!vcIndexsetParamCode:startDate,vcIndexsetParamExplain:开始持仓日期,vcIndexsetParamType:TEXT,vcIsrequired:false!!!**/\n/**!!!vcIndexsetParamCode:endDate,vcIndexsetParamExplain:结束持仓日期,vcIndexsetParamType:TEXT,vcIsrequired:false!!!**/\n/**```vcIndexsetReturnCode:PROD_CODE,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```**/\n/**```vcIndexsetReturnCode:PSTN_DT,vcIndexsetReturnName:持仓日期,vcIndexsetReturnType:String```**/\n/**```vcIndexsetReturnCode:SCR_CODE,vcIndexsetReturnName:资产代码,vcIndexsetReturnType:String```**/\n/**```vcIndexsetReturnCode:SCR_NAME,vcIndexsetReturnName:资产名称,vcIndexsetReturnType:String```**/\n\npackage com.kaiyufound.financehtzg.reports;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport com.kaiyufound.common.MapParser;\nimport com.kaiyufound.common.bo.Result;\nimport com.kaiyufound.common.bo.ResultRow;\nimport com.kaiyufound.common.constant.TableConsts;\nimport com.kaiyufound.common.def.DataType;\nimport com.kaiyufound.core.cache.RowDO;\nimport com.kaiyufound.core.index.DataManager;\nimport com.kaiyufound.framework.service.BaseIndicator;\n\n/**\n * @author hehj\n * @date 2022/9/14\n * <p>\n *     资产清单\n * 根据产品代码和持仓日期获取所有资产代码\n */\npublic class RptHoldList extends BaseIndicator {\n    @Override\n    public Result process(Map<String, Object> parameters) {\n        MapParser mapParser = new MapParser(parameters);\n        String[] prodCodes = mapParser.parseStringArray(\"codes\");//产品代码\n        Integer startDate = mapParser.parseInteger(\"startDate\");\n        Integer endDate = mapParser.parseInteger(\"endDate\");\n\n        Result result = initResult(parameters);\n        for(String prodCode : prodCodes){\n            List<RowDO> recs = DataManager.getInst().getQuery(TableConsts.MD_PROD_POSITION, \"PROD_CODE_PSTN_DT_IDX\").queryAndMatch(prodCode, startDate, endDate, null);\n            if(recs.isEmpty()){\n                continue;\n            }\n\n            for(RowDO rowDO : recs){\n                ResultRow resultRow = result.newResultRow();\n                resultRow.putValue(\"PROD_CODE\", rowDO.getValue(\"PROD_CODE\"));\n                resultRow.putValue(\"PSTN_DT\", rowDO.getValue(\"PSTN_DT\"));\n                resultRow.putValue(\"SCR_CODE\", rowDO.getValue(\"SCR_CODE\"));\n                resultRow.putValue(\"SCR_NAME\", rowDO.getValue(\"SCR_NAME\"));\n            }\n        }\n\n        result.setPrimaryKeys(\"PROD_CODE\", \"PSTN_DT\", \"SCR_CODE\");\n        return result;\n    }\n\n    @Override\n    protected void addHeader(Result result) {\n        result.addHeader(\"PROD_CODE\", \"产品代码\", DataType.STRING);\n        result.addHeader(\"PSTN_DT\", \"持仓日期\", DataType.STRING);\n        result.addHeader(\"SCR_CODE\", \"资产代码\", DataType.STRING);\n        result.addHeader(\"SCR_NAME\", \"资产名称\", DataType.STRING);\n    }\n}","vcIndexsetStatus":"已生效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-09-14 17:17:07","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2024-03-26 14:22:36","vcVersionId":"1772509438205366272","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"1","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"262","vcIndexsetId":"IDX202207260836008962","vcTypeId":"指标集示例-Java指标集","vcIndexsetName":"查询WIND债券分类","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI202206249655470088","vcCaclNameName":"债券指标","vcIndexsetFrom":"计算引擎","vcValueMethod":"Java","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**!!!vcIndexsetParamCode:codes,vcIndexsetParamExplain:债券代码,vcIndexsetParamType:String,vcIsrequired:true!!!**/\r\n/**!!!vcIndexsetParamCode:tradeDate,vcIndexsetParamExplain:日期,vcIndexsetParamType:String,vcIsrequired:false!!!**/\r\n/**```vcIndexsetReturnCode:code,vcIndexsetReturnName:债券代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:windLvl1Code,vcIndexsetReturnName:债券一级分类代码(WIND),vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:windLvl1Name,vcIndexsetReturnName:债券一级分类名称(WIND),vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:windLvl2Code,vcIndexsetReturnName:债券二级分类代码(WIND),vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:windLvl2Name,vcIndexsetReturnName:债券二级分类名称(WIND),vcIndexsetReturnType:String```**/\r\n\r\npackage com.kaiyufound.financehtzg.reports.asset;\r\n\r\nimport com.kaiyufound.common.MapParser;\r\nimport com.kaiyufound.common.bo.Result;\r\nimport com.kaiyufound.common.bo.ResultRow;\r\nimport com.kaiyufound.common.constant.TableConsts;\r\nimport com.kaiyufound.common.def.DataType;\r\nimport com.kaiyufound.common.util.CollectionUtil;\r\nimport com.kaiyufound.common.util.DateUtil;\r\nimport com.kaiyufound.core.cache.RowDO;\r\nimport com.kaiyufound.core.index.DataManager;\r\nimport com.kaiyufound.core.index.DataQuery;\r\nimport com.kaiyufound.financehtzg.reports.ProdPositionReportBase;\r\nimport com.kaiyufound.financehtzg.utils.enums.SecurityTypeCode;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.function.Predicate;\r\n\r\n/**\r\n * @author lids\r\n * @date 2022/6/15\r\n */\r\npublic class RptBondType extends ProdPositionReportBase {\r\n    @Override\r\n    protected Predicate<RowDO> setFilter() {\r\n        return new Predicate<RowDO>() {\r\n            @Override\r\n            public boolean test(RowDO rowDO) {\r\n                return SecurityTypeCode.BOND.equals(rowDO.getValue(\"SCR_TYPE\"));\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    protected void addHeader(Result result) {\r\n        result.addHeader(\"code\", \"债券代码\", DataType.STRING);\r\n        result.addHeader(\"windLvl1Code\", \"债券一级分类代码(WIND)\", DataType.STRING);\r\n        result.addHeader(\"windLvl1Name\", \"债券一级分类名称(WIND)\", DataType.STRING);\r\n        result.addHeader(\"windLvl2Code\", \"债券二级分类代码(WIND)\", DataType.STRING);\r\n        result.addHeader(\"windLvl2Name\", \"债券二级分类名称(WIND)\", DataType.STRING);\r\n        result.setPrimaryKeys(\"code\");\r\n    }\r\n\r\n    @Override\r\n    protected List<ResultRow> getResultByScrId(Result result, String scrId, MapParser mapParser) {\r\n        List<ResultRow> list = new ArrayList<>();\r\n        Integer date = mapParser.parseInteger(\"tradeDate\");\r\n        if (null == date) {\r\n            date = DateUtil.parseToIntDate(Calendar.getInstance());\r\n        }\r\n        RowDO rowDO = getBondCategoryRec(scrId, date);\r\n        if (null != rowDO) {\r\n            String lvl1Code = rowDO.getValue(\"LVL1_CODE\");\r\n            String lvl1Name = rowDO.getValue(\"LVL1_NAME\");\r\n            String lvl2Code = rowDO.getValue(\"LVL2_CODE\");\r\n            String lvl2Name = rowDO.getValue(\"LVL2_NAME\");\r\n\r\n            ResultRow resultRow = result.newResultRow();\r\n            resultRow.putValue(\"code\", scrId);\r\n            resultRow.putValue(\"windLvl1Code\", lvl1Code);\r\n            resultRow.putValue(\"windLvl1Name\", lvl1Name);\r\n            resultRow.putValue(\"windLvl2Code\", lvl2Code);\r\n            resultRow.putValue(\"windLvl2Name\", lvl2Name);\r\n            list.add(resultRow);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    private RowDO getBondCategoryRec(String scrId, int date) {\r\n        DataQuery dataQuery = DataManager.getInst().getQuery(TableConsts.IV_BOND_CATEGORY, \"SCR_ID_BOARD_CAT_IDX\");\r\n        List<RowDO> windCatgList = dataQuery.queryAndMatch(scrId, \"WIND\", rowDO -> {\r\n            int effDate = rowDO.getValue(\"EFF_DT\");\r\n            int exprDate = rowDO.getValue(\"EXPR_DT\");\r\n            return date >= effDate && date < exprDate;\r\n        });\r\n        if (!CollectionUtil.isEmpty(windCatgList)) {\r\n            return windCatgList.get(0);\r\n        }\r\n        return null;\r\n    }\r\n}","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-07-26 15:18:53","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-11-19 13:13:29","vcVersionId":"1593834825935097856","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"1","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"682","vcIndexsetId":"IDX10000243","vcTypeId":"指标集示例-Sql指标集","vcIndexsetName":"产品持仓明细","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI10000102","vcCaclNameName":"产品指标","vcIndexsetFrom":"data","vcValueMethod":"Sql","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**!!!vcIndexsetParamCode:prodCode,vcIndexsetParamExplain:产品代码,vcIndexsetParamType:LIST,vcIsrequired:false!!!**/\r\n/**!!!vcIndexsetParamCode:startDate,vcIndexsetParamExplain:开始持仓日期,vcIndexsetParamType:TEXT,vcIsrequired:false!!!**/\r\n/**!!!vcIndexsetParamCode:endDate,vcIndexsetParamExplain:结束持仓日期,vcIndexsetParamType:TEXT,vcIsrequired:false!!!**/\r\n/**```vcIndexsetReturnCode:PROD_CODE,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:PSTN_DT,vcIndexsetReturnName:持仓日期,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:SCR_CODE,vcIndexsetReturnName:资产代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:SCR_NAME,vcIndexsetReturnName:资产名称,vcIndexsetReturnType:String```**/\r\nSELECT\r\n             <!--列名-->\r\n             PROD_CODE,PSTN_DT,SCR_CODE,SCR_NAME\r\nFROM\r\n         <!--表名-->\r\n\tRI_PROD_POSITION\r\n<!--如果where条件里的表达式不为空，则拼接where语句，如果为空，则不拼接-->\r\n<where> \r\n        <!--判断参数是否为空，如果为空则不拼接该表达式-->\r\n        <if test=\"prodCode!=null and prodCode!=''\">\r\n              PROD_CODE=#{prodCode}\r\n        </if>\r\n        <!--判断参数是否为空，如果为空则不拼接该表达式-->\r\n        <if test=\"startDate!=null and startDate!=''\">\r\n              AND PSTN_DT<![CDATA[ >= ]]>#{startDate}\r\n        </if>\r\n        <!--判断参数是否为空，如果为空则不拼接该表达式-->\r\n        <if test=\"endDate!=null and endDate!=''\">\r\n              AND PSTN_DT<![CDATA[ <= ]]>#{endDate}\r\n        </if>\r\n</where>","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-09-14 15:26:45","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-09-14 16:20:57","vcVersionId":"1569964405645512704","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"1","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"244","vcIndexsetId":"IDX202207224311342086","vcTypeId":"指标集示例-Sql指标集","vcIndexsetName":"Sql查询产品清单示例","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI202207223344588808","vcCaclNameName":"其他","vcIndexsetFrom":"data","vcValueMethod":"Sql","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**!!!vcIndexsetParamCode:prodTypes,vcIndexsetParamExplain:产品类型,vcIndexsetParamType:LIST,vcIsrequired:false!!!**/\r\n/**!!!vcIndexsetParamCode:tradeDate,vcIndexsetParamExplain:业务日期,vcIndexsetParamType:TEXT,vcIsrequired:false!!!**/\r\n/**```vcIndexsetReturnCode:PROD_CODE,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:PROD_NAME,vcIndexsetReturnName:产品名称,vcIndexsetReturnType:String```**/\r\nSELECT\r\n             <!--列名-->\r\n             PROD_CODE,PROD_NAME,PROD_TYPE\r\nFROM\r\n         <!--表名-->\r\n\tPD_PROD_INFO\r\n<!--如果where条件里的表达式不为空，则拼接where语句，如果为空，则不拼接-->\r\n<where> \r\n        <!--判断参数是否为空，如果为空则不拼接该表达式-->\r\n        <!--\r\n             <if test=\"prodTypes!=null and prodTypes!=''\">\r\n                   PROD_TYPE=#{prodTypes}\r\n             </if>\r\n         -->\r\n    PROD_TYPE in\r\n    <foreach collection=\"prodTypes\" item=\"item\" separator=\",\" open = \"(\" close=\")\">\r\n        #{item}\r\n    </foreach>\r\n</where>","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-07-22 20:56:50","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":"2022-10-20 11:09:31","vcVersionId":"1582931992293543936","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"2","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null},{"id":"401","vcIndexsetId":"IDX202208187973140486","vcTypeId":"指标集示例","vcIndexsetName":"指标集demo","vcTypeName":null,"vcIndexsetLabelCode":null,"vcIndexsetLabelName":null,"vcCaclName":"VAI202206245318656005","vcCaclNameName":"产品控制指标","vcIndexsetFrom":"data","vcValueMethod":"Sql","vcValueMethodName":null,"vcIndexsetDescribe":null,"vcDateScript":"/**!!!vcIndexsetParamCode:prodCode,vcIndexsetParamExplain:产品代码,vcIndexsetParamType:TEXT,vcIsrequired:true!!!**/\r\n/**```vcIndexsetReturnCode:prodCode,vcIndexsetReturnName:产品代码,vcIndexsetReturnType:String```**/\r\n/**```vcIndexsetReturnCode:prodName ,vcIndexsetReturnName:产品名称,vcIndexsetReturnType:String```**/\r\n\r\nselect prod_code as prodCode,prod_name as prodName from pd_prod_info where prod_code = #{prodCode}","vcIndexsetStatus":"已失效","vcCrateUser":"44","vcCrateUserName":"系统管理员","dCreate":"2022-08-18 09:27:56","vcUpdateUser":"44","vcUpdateUserName":"系统管理员","dUpdate":null,"vcVersionId":"1560077200470970368","vcReleaseStatus":null,"vcRequest":null,"vcRequestAddr":null,"vcRequestParam":null,"vcMd5":null,"sort":"3","pageSize":null,"pageNo":null,"indexsetParamInfoList":null,"indexsetResultInfos":null}],"queryParam":{"paramType":[{"id":null,"vcCode":" ","vcName":"全部","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":null,"vcCreateUser":null,"vcUpdateUser":null,"vcType":null,"dcreate":null,"dupdate":null},{"id":null,"vcCode":"sql","vcName":"Sql","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":1,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"PARAM_TYPE","dcreate":null,"dupdate":null},{"id":null,"vcCode":"python","vcName":"Python","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":2,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"PARAM_TYPE","dcreate":null,"dupdate":null},{"id":null,"vcCode":"java","vcName":"Java","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":3,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"PARAM_TYPE","dcreate":null,"dupdate":null},{"id":null,"vcCode":"url","vcName":"Url","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":4,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"PARAM_TYPE","dcreate":null,"dupdate":null}],"labelList":[{"vcId":"3","vcLabelCode":"1540153432772579328","vcLabelName":"基金","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"fyd","vcUpdateUser":null,"dcreate":"2022-06-24 10:02:47","dupdate":null,"llabelSort":159},{"vcId":"81","vcLabelCode":"1542818840663166976","vcLabelName":"占比","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanw","vcUpdateUser":null,"dcreate":"2022-07-01 18:34:10","dupdate":null,"llabelSort":166},{"vcId":"441","vcLabelCode":"1557276521213857792","vcLabelName":"交易端控制","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"likai","vcUpdateUser":null,"dcreate":"2022-08-10 16:03:50","dupdate":null,"llabelSort":243},{"vcId":"463","vcLabelCode":"1558390174520578048","vcLabelName":"通天塔","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanmr","vcUpdateUser":null,"dcreate":"2022-08-13 17:49:05","dupdate":null,"llabelSort":246},{"vcId":"461","vcLabelCode":"1558384478123069440","vcLabelName":"新增","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanmr","vcUpdateUser":null,"dcreate":"2022-08-13 17:26:27","dupdate":null,"llabelSort":245},{"vcId":"381","vcLabelCode":"1555170327036825600","vcLabelName":"已设置","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"huangh","vcUpdateUser":null,"dcreate":"2022-08-04 20:34:34","dupdate":null,"llabelSort":230},{"vcId":"430","vcLabelCode":"1557041678135726080","vcLabelName":"已配置","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-08-10 00:30:39","dupdate":null,"llabelSort":241},{"vcId":"431","vcLabelCode":"1557043263947542528","vcLabelName":"已设置，缺板块","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-08-10 00:36:57","dupdate":null,"llabelSort":242},{"vcId":"401","vcLabelCode":"1556451666373513216","vcLabelName":"现金赢家禁止投资","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"likai","vcUpdateUser":null,"dcreate":"2022-08-08 09:26:09","dupdate":null,"llabelSort":231},{"vcId":"482","vcLabelCode":"1575085899077783552","vcLabelName":"RptIssuanceSubject","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanw","vcUpdateUser":null,"dcreate":"2022-09-28 19:31:56","dupdate":null,"llabelSort":248},{"vcId":"484","vcLabelCode":"1575087191556755456","vcLabelName":"RptIssueInstitutionInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:37:04","dupdate":null,"llabelSort":250},{"vcId":"485","vcLabelCode":"1575087636165562368","vcLabelName":"RptProdOpenDay","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:38:50","dupdate":null,"llabelSort":251},{"vcId":"487","vcLabelCode":"1575088439731294208","vcLabelName":"RptSingleProdAssetsSumPreDayRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:42:02","dupdate":null,"llabelSort":253},{"vcId":"490","vcLabelCode":"1575089276750794752","vcLabelName":"RptBondQuot","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:45:21","dupdate":null,"llabelSort":256},{"vcId":"524","vcLabelCode":"1575095504902164480","vcLabelName":"RptProdSumSingleAssetRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:10:06","dupdate":null,"llabelSort":290},{"vcId":"525","vcLabelCode":"1575095518537846784","vcLabelName":"RptProdInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:10:10","dupdate":null,"llabelSort":291},{"vcId":"641","vcLabelCode":"1590581703196413952","vcLabelName":"RptMaxRunBatchDate","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"wufan","vcUpdateUser":null,"dcreate":"2022-11-10 13:46:44","dupdate":null,"llabelSort":334},{"vcId":"601","vcLabelCode":"1589899191382052864","vcLabelName":"RptSingleProdAssetsSumByIssuerDetail","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-11-08 16:34:40","dupdate":null,"llabelSort":332},{"vcId":"642","vcLabelCode":"1590601226620375040","vcLabelName":"RptProdRunBatchList","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"wufan","vcUpdateUser":null,"dcreate":"2022-11-10 15:04:19","dupdate":null,"llabelSort":335},{"vcId":"643","vcLabelCode":"1590627560570621952","vcLabelName":"RptVirSceuDetailType","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"wufan","vcUpdateUser":null,"dcreate":"2022-11-10 16:48:57","dupdate":null,"llabelSort":336},{"vcId":"481","vcLabelCode":"1575085549490933760","vcLabelName":"RptPositionProperty","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanw","vcUpdateUser":null,"dcreate":"2022-09-28 19:30:33","dupdate":null,"llabelSort":247},{"vcId":"486","vcLabelCode":"1575087929506795520","vcLabelName":"RptProdAssocicatedPerson","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:40:00","dupdate":null,"llabelSort":252},{"vcId":"488","vcLabelCode":"1575088696728883200","vcLabelName":"RptSingleProdAntiRepoSumRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:43:03","dupdate":null,"llabelSort":254},{"vcId":"489","vcLabelCode":"1575088922042699776","vcLabelName":"RptProdParty","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:43:57","dupdate":null,"llabelSort":255},{"vcId":"491","vcLabelCode":"1575089655395782656","vcLabelName":"RptBondDerivedInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:46:52","dupdate":null,"llabelSort":257},{"vcId":"492","vcLabelCode":"1575089935017447424","vcLabelName":"RptStockQuot","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:47:58","dupdate":null,"llabelSort":258},{"vcId":"493","vcLabelCode":"1575090000008187904","vcLabelName":"RptBondIndustryClassification","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 19:48:14","dupdate":null,"llabelSort":259},{"vcId":"497","vcLabelCode":"1575090648258842624","vcLabelName":"RptSingleProdRepoSumRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:50:48","dupdate":null,"llabelSort":263},{"vcId":"498","vcLabelCode":"1575090906854461440","vcLabelName":"RptProdCatg","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:51:50","dupdate":null,"llabelSort":264},{"vcId":"499","vcLabelCode":"1575090939221905408","vcLabelName":"RptSecurityIsStop","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 19:51:58","dupdate":null,"llabelSort":265},{"vcId":"500","vcLabelCode":"1575091137406963712","vcLabelName":"RptSingleProdSingleBondRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:52:45","dupdate":null,"llabelSort":266},{"vcId":"502","vcLabelCode":"1575091584482021376","vcLabelName":"RptSingleProdStockSumRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:54:32","dupdate":null,"llabelSort":268},{"vcId":"503","vcLabelCode":"1575091598235144192","vcLabelName":"RptBondClassification","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 19:54:35","dupdate":null,"llabelSort":269},{"vcId":"504","vcLabelCode":"1575092090197643264","vcLabelName":"RptProdSaleChld","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:56:32","dupdate":null,"llabelSort":270},{"vcId":"505","vcLabelCode":"1575092134606934016","vcLabelName":"RptProdPledgeAmt","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 19:56:43","dupdate":null,"llabelSort":271},{"vcId":"506","vcLabelCode":"1575092310188888064","vcLabelName":"RptBondRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:57:25","dupdate":null,"llabelSort":272},{"vcId":"507","vcLabelCode":"1575092516817080320","vcLabelName":"RptFundType","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:58:14","dupdate":null,"llabelSort":273},{"vcId":"508","vcLabelCode":"1575092728889479168","vcLabelName":"RptSingleProdSingleFundRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:59:05","dupdate":null,"llabelSort":274},{"vcId":"509","vcLabelCode":"1575092770505363456","vcLabelName":"RptProdRepoCapitalLiaRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 19:59:14","dupdate":null,"llabelSort":275},{"vcId":"511","vcLabelCode":"1575093171451465728","vcLabelName":"RptBondType","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:00:50","dupdate":null,"llabelSort":277},{"vcId":"512","vcLabelCode":"1575093364968263680","vcLabelName":"RptSingleProdAssetsSumByIssuer","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:01:36","dupdate":null,"llabelSort":278},{"vcId":"515","vcLabelCode":"1575093922223493120","vcLabelName":"RptBondResidualTerm","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:03:49","dupdate":null,"llabelSort":281},{"vcId":"516","vcLabelCode":"1575094027018178560","vcLabelName":"RptSecurityInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:04:14","dupdate":null,"llabelSort":282},{"vcId":"518","vcLabelCode":"1575094227384274944","vcLabelName":"RptProdNAV","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:05:02","dupdate":null,"llabelSort":284},{"vcId":"520","vcLabelCode":"1575094682768248832","vcLabelName":"RptBondInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:06:50","dupdate":null,"llabelSort":286},{"vcId":"521","vcLabelCode":"1575094919322800128","vcLabelName":"RptFundInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:07:47","dupdate":null,"llabelSort":287},{"vcId":"523","vcLabelCode":"1575095321661411328","vcLabelName":"RptSingleProdSingleAssetRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:09:23","dupdate":null,"llabelSort":289},{"vcId":"527","vcLabelCode":"1575096304802074624","vcLabelName":"RptSingleProdSumBySecurityTypeRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:13:17","dupdate":null,"llabelSort":293},{"vcId":"529","vcLabelCode":"1575096851412160512","vcLabelName":"RptIndustryInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:15:27","dupdate":null,"llabelSort":295},{"vcId":"530","vcLabelCode":"1575097063325175808","vcLabelName":"RptProdAvgAssetDur","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:16:18","dupdate":null,"llabelSort":296},{"vcId":"531","vcLabelCode":"1575097277557641216","vcLabelName":"RptBondModDur","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:17:09","dupdate":null,"llabelSort":297},{"vcId":"532","vcLabelCode":"1575097509850779648","vcLabelName":"RptProdTrackingErrorYear","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:18:04","dupdate":null,"llabelSort":298},{"vcId":"533","vcLabelCode":"1575097708664983552","vcLabelName":"RptStockIssueInstitutionInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:18:52","dupdate":null,"llabelSort":299},{"vcId":"535","vcLabelCode":"1575098148844605440","vcLabelName":"RptProdIndexInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:20:37","dupdate":null,"llabelSort":301},{"vcId":"538","vcLabelCode":"1575098619177078784","vcLabelName":"RptBondGuarRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:22:29","dupdate":null,"llabelSort":304},{"vcId":"542","vcLabelCode":"1575099267956215808","vcLabelName":"RptProdNAV1","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:25:04","dupdate":null,"llabelSort":308},{"vcId":"543","vcLabelCode":"1575099411695013888","vcLabelName":"RptProdMaxDrawdown","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:25:38","dupdate":null,"llabelSort":309},{"vcId":"545","vcLabelCode":"1575099808811716608","vcLabelName":"RptFinancialTransactioInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:27:13","dupdate":null,"llabelSort":311},{"vcId":"547","vcLabelCode":"1575101445936648192","vcLabelName":"RptBondShortRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:33:43","dupdate":null,"llabelSort":313},{"vcId":"548","vcLabelCode":"1575101717811433472","vcLabelName":"RptBondRatingThenIssuerRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:34:48","dupdate":null,"llabelSort":314},{"vcId":"551","vcLabelCode":"1575102897492987904","vcLabelName":"RptRepoTradeInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:39:29","dupdate":null,"llabelSort":317},{"vcId":"552","vcLabelCode":"1575103922320838656","vcLabelName":"RptInnerAssetClassification","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:43:33","dupdate":null,"llabelSort":318},{"vcId":"553","vcLabelCode":"1575104112377335808","vcLabelName":"RptAbsBondInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:44:19","dupdate":null,"llabelSort":319},{"vcId":"555","vcLabelCode":"1575104371295916032","vcLabelName":"RptProdRiskExposureSet","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:45:20","dupdate":null,"llabelSort":321},{"vcId":"556","vcLabelCode":"1575104571674595328","vcLabelName":"RptBondClassificationInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:46:08","dupdate":null,"llabelSort":322},{"vcId":"557","vcLabelCode":"1575104664003809280","vcLabelName":"RptFuturesInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:46:30","dupdate":null,"llabelSort":323},{"vcId":"558","vcLabelCode":"1575104772225241088","vcLabelName":"RptSingleProdAssetsSumByIndustry","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:46:56","dupdate":null,"llabelSort":324},{"vcId":"559","vcLabelCode":"1575104986751307776","vcLabelName":"RptSecuritiesByAdministrator","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:47:47","dupdate":null,"llabelSort":325},{"vcId":"561","vcLabelCode":"1575105189080338432","vcLabelName":"RptFundClassificationByConceptPlate","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:48:35","dupdate":null,"llabelSort":327},{"vcId":"562","vcLabelCode":"1575105384153223168","vcLabelName":"RptAmountAndVolumeStockQuot","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:49:22","dupdate":null,"llabelSort":328},{"vcId":"564","vcLabelCode":"1575105665381306368","vcLabelName":"RptSingleProdAssetsSumByOriginalIssuer","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:50:29","dupdate":null,"llabelSort":330},{"vcId":"581","vcLabelCode":"1575420741564895232","vcLabelName":"RptProductList","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanw","vcUpdateUser":null,"dcreate":"2022-09-29 17:42:29","dupdate":null,"llabelSort":331},{"vcId":"621","vcLabelCode":"1590333818928238592","vcLabelName":"RptStockInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanw","vcUpdateUser":null,"dcreate":"2022-11-09 21:21:44","dupdate":null,"llabelSort":333},{"vcId":"483","vcLabelCode":"1575086358467317760","vcLabelName":"RptRepoInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"yanw","vcUpdateUser":null,"dcreate":"2022-09-28 19:33:46","dupdate":null,"llabelSort":249},{"vcId":"494","vcLabelCode":"1575090188319854592","vcLabelName":"RptBondIssuerRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:48:59","dupdate":null,"llabelSort":260},{"vcId":"495","vcLabelCode":"1575090285359271936","vcLabelName":"RptOptInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 19:49:22","dupdate":null,"llabelSort":261},{"vcId":"496","vcLabelCode":"1575090395354894336","vcLabelName":"RptBondRt","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:49:48","dupdate":null,"llabelSort":262},{"vcId":"501","vcLabelCode":"1575091358283206656","vcLabelName":"RptFundNAV","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:53:38","dupdate":null,"llabelSort":267},{"vcId":"510","vcLabelCode":"1575092940320149504","vcLabelName":"RptProdChld","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 19:59:55","dupdate":null,"llabelSort":276},{"vcId":"513","vcLabelCode":"1575093603326365696","vcLabelName":"RptSingleProdSingleStockRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:02:33","dupdate":null,"llabelSort":279},{"vcId":"514","vcLabelCode":"1575093816795467776","vcLabelName":"RptFundShare","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:03:24","dupdate":null,"llabelSort":280},{"vcId":"517","vcLabelCode":"1575094192470888448","vcLabelName":"RptBondIssueInstitutionInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:04:53","dupdate":null,"llabelSort":283},{"vcId":"519","vcLabelCode":"1575094441918730240","vcLabelName":"RptIvBfQuot","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:05:53","dupdate":null,"llabelSort":285},{"vcId":"522","vcLabelCode":"1575095122255810560","vcLabelName":"RptSingleProdAssetsSumRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:08:35","dupdate":null,"llabelSort":288},{"vcId":"526","vcLabelCode":"1575095736146726912","vcLabelName":"RptProdDuration","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:11:02","dupdate":null,"llabelSort":292},{"vcId":"528","vcLabelCode":"1575096646944034816","vcLabelName":"RptProdBaseRatioSet","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:14:39","dupdate":null,"llabelSort":294},{"vcId":"534","vcLabelCode":"1575097913984552960","vcLabelName":"RptCreditRatingRecord","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:19:41","dupdate":null,"llabelSort":300},{"vcId":"536","vcLabelCode":"1575098193480388608","vcLabelName":"RptLeadUnderWriterInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:20:47","dupdate":null,"llabelSort":302},{"vcId":"537","vcLabelCode":"1575098389970948096","vcLabelName":"RptSingleProdAssetsSumDynamicRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:21:34","dupdate":null,"llabelSort":303},{"vcId":"539","vcLabelCode":"1575098836047761408","vcLabelName":"RptProdSumSingleAssetTypeRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:23:21","dupdate":null,"llabelSort":305},{"vcId":"540","vcLabelCode":"1575098944881561600","vcLabelName":"RptAllUnderWriterInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:23:47","dupdate":null,"llabelSort":306},{"vcId":"541","vcLabelCode":"1575099041929367552","vcLabelName":"RptInstitutionIssuerRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:24:10","dupdate":null,"llabelSort":307},{"vcId":"544","vcLabelCode":"1575099485225357312","vcLabelName":"RptInstitutionInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:25:55","dupdate":null,"llabelSort":310},{"vcId":"546","vcLabelCode":"1575100121413193728","vcLabelName":"RptTransactionSourceOfBond","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:28:27","dupdate":null,"llabelSort":312},{"vcId":"549","vcLabelCode":"1575101913215668224","vcLabelName":"RptBondIssuerRatingThenRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:35:34","dupdate":null,"llabelSort":315},{"vcId":"550","vcLabelCode":"1575102687312220160","vcLabelName":"RptSingleProdWeightAssetDur","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:38:39","dupdate":null,"llabelSort":316},{"vcId":"554","vcLabelCode":"1575104285958606848","vcLabelName":"RptDepInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:45:00","dupdate":null,"llabelSort":320},{"vcId":"560","vcLabelCode":"1575105056527749120","vcLabelName":"RptFuturesType","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"qichen","vcUpdateUser":null,"dcreate":"2022-09-28 20:48:04","dupdate":null,"llabelSort":326},{"vcId":"563","vcLabelCode":"1575105586582917120","vcLabelName":"RptBondProperties","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2022-09-28 20:50:10","dupdate":null,"llabelSort":329},{"vcId":"681","vcLabelCode":"1595748840470876160","vcLabelName":"RptProductListSearch","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"wufan","vcUpdateUser":null,"dcreate":"2022-11-24 19:59:05","dupdate":null,"llabelSort":338},{"vcId":"701","vcLabelCode":"1623936907434135552","vcLabelName":"RptProdHolder","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-02-10 14:48:24","dupdate":null,"llabelSort":339},{"vcId":"981","vcLabelCode":"1635834711261712384","vcLabelName":"RptRiskProdKeyDurationDec","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-15 10:46:02","dupdate":null,"llabelSort":355},{"vcId":"1121","vcLabelCode":"1643455218182131712","vcLabelName":"RptPressureTestOverviewOfLiquidity","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-05 11:27:12","dupdate":null,"llabelSort":365},{"vcId":"741","vcLabelCode":"1625771824962998272","vcLabelName":"RptProdRepoAdequacyRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-02-15 16:19:43","dupdate":null,"llabelSort":341},{"vcId":"761","vcLabelCode":"1626516579644739584","vcLabelName":"RptO32PoolTypeDict","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-02-17 17:39:06","dupdate":null,"llabelSort":342},{"vcId":"901","vcLabelCode":"1633719849203142656","vcLabelName":"RptRiskIncomeRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-09 14:42:19","dupdate":null,"llabelSort":351},{"vcId":"1041","vcLabelCode":"1638807148647550976","vcLabelName":"RptRiskFuturesIndexAnalysis","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-23 15:37:26","dupdate":null,"llabelSort":358},{"vcId":"1242","vcLabelCode":"1650700166451302400","vcLabelName":"RptPressureTestRedeemAssetListOverview","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-25 11:16:02","dupdate":null,"llabelSort":374},{"vcId":"1281","vcLabelCode":"1655504657050636288","vcLabelName":"RptRiskPosiWeiDateListFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:27:22","dupdate":null,"llabelSort":377},{"vcId":"721","vcLabelCode":"1625736358519771136","vcLabelName":"RptProdStatus","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-02-15 13:58:47","dupdate":null,"llabelSort":340},{"vcId":"801","vcLabelCode":"1628294837730152448","vcLabelName":"RptSingleProdSingleAssetConcen","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-02-22 15:25:16","dupdate":null,"llabelSort":344},{"vcId":"841","vcLabelCode":"1632642487338274816","vcLabelName":"RptRiskVaRBackTest","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-06 15:21:16","dupdate":null,"llabelSort":346},{"vcId":"861","vcLabelCode":"1633064199276072960","vcLabelName":"RptRiskComponentStockAnalysic","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-07 19:17:00","dupdate":null,"llabelSort":349},{"vcId":"921","vcLabelCode":"1634065638177771520","vcLabelName":"RptRisRelevancekYields","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-10 13:36:22","dupdate":null,"llabelSort":352},{"vcId":"1001","vcLabelCode":"1636171311799734272","vcLabelName":"RptRiskProductDuration","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-16 09:03:33","dupdate":null,"llabelSort":356},{"vcId":"1062","vcLabelCode":"1640295661301796864","vcLabelName":"RptPldgDetail","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-27 18:12:15","dupdate":null,"llabelSort":360},{"vcId":"1101","vcLabelCode":"1643165664615206912","vcLabelName":"RptLeveragePosiAnalyse","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-04 16:16:37","dupdate":null,"llabelSort":364},{"vcId":"1122","vcLabelCode":"1643460807662637056","vcLabelName":"RptPressureTestSingleviewOfLiquidity","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-05 11:49:25","dupdate":null,"llabelSort":366},{"vcId":"1141","vcLabelCode":"1645263646999318528","vcLabelName":"RptPressureTestAssetCollections","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-10 11:13:15","dupdate":null,"llabelSort":367},{"vcId":"1161","vcLabelCode":"1646081819709411328","vcLabelName":"RptPositiveContraryRepoIndDateRage","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-12 17:24:23","dupdate":null,"llabelSort":368},{"vcId":"1201","vcLabelCode":"1647778169115250688","vcLabelName":"RptRiskPosiHeavyweightPosiWeiDetail","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-17 09:45:04","dupdate":null,"llabelSort":370},{"vcId":"1287","vcLabelCode":"1655505555369889792","vcLabelName":"RptRiskPosiWheeling","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:30:56","dupdate":null,"llabelSort":383},{"vcId":"1301","vcLabelCode":"1655832567225651200","vcLabelName":"RptRiskPosiHeavyweightStabilityRangeYieldFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-09 15:10:22","dupdate":null,"llabelSort":388},{"vcId":"661","vcLabelCode":"1594936305551282176","vcLabelName":"RptListedSecurities","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"wufan","vcUpdateUser":null,"dcreate":"2022-11-22 14:10:22","dupdate":null,"llabelSort":337},{"vcId":"781","vcLabelCode":"1627941040939995136","vcLabelName":"RptProdLowRatingPldgRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-02-21 15:59:24","dupdate":null,"llabelSort":343},{"vcId":"842","vcLabelCode":"1632645297463234560","vcLabelName":"RptRiskVaRPorHisProfitLD","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-06 15:32:26","dupdate":null,"llabelSort":347},{"vcId":"881","vcLabelCode":"1633635311810646016","vcLabelName":"RptBenchYield","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-09 09:06:24","dupdate":null,"llabelSort":350},{"vcId":"1021","vcLabelCode":"1637992612411609088","vcLabelName":"RptRiskFuturesRiskAnalysis","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-21 09:40:45","dupdate":null,"llabelSort":357},{"vcId":"1061","vcLabelCode":"1640283605014024192","vcLabelName":"RptPositiveRepoIndList","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-27 17:24:21","dupdate":null,"llabelSort":359},{"vcId":"1081","vcLabelCode":"1642794075805585408","vcLabelName":"RptRiskComponentStockAnalysicYields","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-03 15:40:03","dupdate":null,"llabelSort":361},{"vcId":"1082","vcLabelCode":"1642799636802572288","vcLabelName":"RptRiskPosiHeavyweightStabilityRangeYieldDetail","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-03 16:02:09","dupdate":null,"llabelSort":362},{"vcId":"1083","vcLabelCode":"1642799944677068800","vcLabelName":"RptRiskPosiHeavyweightStabilityDetail","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-03 16:03:23","dupdate":null,"llabelSort":363},{"vcId":"1181","vcLabelCode":"1647456662723891200","vcLabelName":"RptPressureTestAssetInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-16 12:27:31","dupdate":null,"llabelSort":369},{"vcId":"1241","vcLabelCode":"1650686854820925440","vcLabelName":"RptPressureTestResults","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-25 10:23:09","dupdate":null,"llabelSort":373},{"vcId":"1243","vcLabelCode":"1650703067944980480","vcLabelName":"RptPressureTestRedeemSingleviewOfLiquidity","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-04-25 11:27:34","dupdate":null,"llabelSort":375},{"vcId":"821","vcLabelCode":"1632628598437449728","vcLabelName":"RptRiskVaR","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-06 14:26:05","dupdate":null,"llabelSort":345},{"vcId":"843","vcLabelCode":"1632646568861634560","vcLabelName":"RptRiskDrawdownAnalysis","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-03-06 15:37:29","dupdate":null,"llabelSort":348},{"vcId":"941","vcLabelCode":"1635146749599420416","vcLabelName":"RptRiskPosiHeavyweightPosiWei","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-13 13:12:19","dupdate":null,"llabelSort":353},{"vcId":"961","vcLabelCode":"1635156109041995776","vcLabelName":"RptRiskPosiHeavyweightStability","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-03-13 13:49:30","dupdate":null,"llabelSort":354},{"vcId":"1221","vcLabelCode":"1650314171973242880","vcLabelName":"RptLeverageInitiativeMngInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-24 09:42:14","dupdate":null,"llabelSort":371},{"vcId":"1222","vcLabelCode":"1650314350952583168","vcLabelName":"RptLeverageRange","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-04-24 09:42:57","dupdate":null,"llabelSort":372},{"vcId":"1261","vcLabelCode":"1654665883789955072","vcLabelName":"RptRiskPosiHeavyweightStabilityRangeYield","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-06 09:54:23","dupdate":null,"llabelSort":376},{"vcId":"1282","vcLabelCode":"1655504820162924544","vcLabelName":"RptRiskPosiHeavyweightStabilityRangeYieldDetailFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:28:01","dupdate":null,"llabelSort":378},{"vcId":"1283","vcLabelCode":"1655504908188782592","vcLabelName":"RptRiskPosiHeavyweightStabilityDetailFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:28:22","dupdate":null,"llabelSort":379},{"vcId":"1284","vcLabelCode":"1655505023670554624","vcLabelName":"RptRiskPosiHeavyweightPosiWeiFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:28:50","dupdate":null,"llabelSort":380},{"vcId":"1285","vcLabelCode":"1655505334728527872","vcLabelName":"RptRiskPosiHeavyweightPosiWeiDetailFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:30:04","dupdate":null,"llabelSort":381},{"vcId":"1286","vcLabelCode":"1655505437665136640","vcLabelName":"RptRiskPosiWheelingFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:30:28","dupdate":null,"llabelSort":382},{"vcId":"1288","vcLabelCode":"1655505667982757888","vcLabelName":"RptRiskPosiWeiDateList","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:31:23","dupdate":null,"llabelSort":384},{"vcId":"1289","vcLabelCode":"1655506335875338240","vcLabelName":"RptRiskPosiHeavyweightStabilityFund","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 17:34:02","dupdate":null,"llabelSort":385},{"vcId":"1290","vcLabelCode":"1655512346170363904","vcLabelName":"RptInnerBondRating","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"songyx","vcUpdateUser":null,"dcreate":"2023-05-08 17:57:55","dupdate":null,"llabelSort":386},{"vcId":"1291","vcLabelCode":"1655537442398277632","vcLabelName":"RptLeverageAbility","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"liyang","vcUpdateUser":null,"dcreate":"2023-05-08 19:37:39","dupdate":null,"llabelSort":387},{"vcId":"1322","vcLabelCode":"1736715814863769600","vcLabelName":"RptHXAccountPermance","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-18 19:51:31","dupdate":null,"llabelSort":390},{"vcId":"1323","vcLabelCode":"1736716178052747264","vcLabelName":"RptHXAccountCategory","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-18 19:52:58","dupdate":null,"llabelSort":391},{"vcId":"1324","vcLabelCode":"1736717712203321344","vcLabelName":"RptHXProdDeptInfo","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-18 19:59:03","dupdate":null,"llabelSort":392},{"vcId":"1325","vcLabelCode":"1736940575321624576","vcLabelName":"RptSingleProdSingleAssetConcenHX","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 10:44:38","dupdate":null,"llabelSort":393},{"vcId":"1327","vcLabelCode":"1736942247573852160","vcLabelName":"RptProdSumSingleAssetRatioHX","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 10:51:17","dupdate":null,"llabelSort":395},{"vcId":"1328","vcLabelCode":"1736943302239981568","vcLabelName":"RptProdRepoCapitalLiaRatioHx","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 10:55:28","dupdate":null,"llabelSort":396},{"vcId":"1330","vcLabelCode":"1736944331677372416","vcLabelName":"RptSingleProdAssetsSumRatioHx","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 10:59:34","dupdate":null,"llabelSort":398},{"vcId":"1331","vcLabelCode":"1736945158211112960","vcLabelName":"RptProdSumSingleAssetTypeRatioHx","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 11:02:51","dupdate":null,"llabelSort":399},{"vcId":"1332","vcLabelCode":"1736945538131169280","vcLabelName":"RptProdRiskExposureSetHX","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 11:04:21","dupdate":null,"llabelSort":400},{"vcId":"1333","vcLabelCode":"1736945931301031936","vcLabelName":"RptSingleProdAssetsSumByIssuerHX","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 11:05:55","dupdate":null,"llabelSort":401},{"vcId":"1334","vcLabelCode":"1736946481207840768","vcLabelName":"RptSingleProdSingleAssetRatioHx","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 11:08:06","dupdate":null,"llabelSort":402},{"vcId":"1365","vcLabelCode":"1745344895301849088","vcLabelName":"RptHXPeriodOccupationFunds","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 15:20:24","dupdate":null,"llabelSort":410},{"vcId":"1366","vcLabelCode":"1745357672661782528","vcLabelName":"RptHXPeriodReturnScale","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 16:11:10","dupdate":null,"llabelSort":411},{"vcId":"1372","vcLabelCode":"1746749658706874368","vcLabelName":"RptHXPeriodYield","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-15 12:22:26","dupdate":null,"llabelSort":417},{"vcId":"1381","vcLabelCode":"1747498125494456320","vcLabelName":"RptHXPeriodComprehensiveRateOfReturn","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-17 13:56:34","dupdate":null,"llabelSort":420},{"vcId":"1421","vcLabelCode":"1750409628405075968","vcLabelName":"RptHXRiskVar","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-25 14:45:51","dupdate":null,"llabelSort":422},{"vcId":"1501","vcLabelCode":"1787808837110206464","vcLabelName":"RptSpecialStockAvgCed","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-05-07 19:36:57","dupdate":null,"llabelSort":427},{"vcId":"1335","vcLabelCode":"1737418154990243840","vcLabelName":"RptHXAccountYieldTrend","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-20 18:22:22","dupdate":null,"llabelSort":403},{"vcId":"1336","vcLabelCode":"1737419177305706496","vcLabelName":"RptHXManagerPortraits","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-20 18:26:26","dupdate":null,"llabelSort":404},{"vcId":"1363","vcLabelCode":"1745282432766185472","vcLabelName":"RptHXFloatingPL","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 11:12:12","dupdate":null,"llabelSort":408},{"vcId":"1364","vcLabelCode":"1745284040065421312","vcLabelName":"RptHXPeriodComprehensiveIncome","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 11:18:35","dupdate":null,"llabelSort":409},{"vcId":"1367","vcLabelCode":"1745409690663260160","vcLabelName":"RptHXStockFundProportion","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 19:37:53","dupdate":null,"llabelSort":412},{"vcId":"1373","vcLabelCode":"1746787657024933888","vcLabelName":"RptHXPeriodProjectedRevenueThisYear","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-15 14:53:25","dupdate":null,"llabelSort":418},{"vcId":"1374","vcLabelCode":"1746799674737692672","vcLabelName":"RptHXExcessRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-15 15:41:11","dupdate":null,"llabelSort":419},{"vcId":"1441","vcLabelCode":"1751860130988822528","vcLabelName":"RptHXRiskMaxDrawDown","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-29 14:49:37","dupdate":null,"llabelSort":423},{"vcId":"1442","vcLabelCode":"1751861856412241920","vcLabelName":"RptHXRiskBeta","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-29 14:56:29","dupdate":null,"llabelSort":424},{"vcId":"1461","vcLabelCode":"1760611804012220416","vcLabelName":"RptHXInvestMgrTurnoverRate","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-02-22 18:25:39","dupdate":null,"llabelSort":425},{"vcId":"1321","vcLabelCode":"1736598190175686656","vcLabelName":"RptNonStandardAssets","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-18 12:04:07","dupdate":null,"llabelSort":389},{"vcId":"1326","vcLabelCode":"1736941226357297152","vcLabelName":"RptSingleProdAssetsSumDynamicRatioHx","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 10:47:13","dupdate":null,"llabelSort":394},{"vcId":"1329","vcLabelCode":"1736943801055973376","vcLabelName":"RptProdSumAssetsSumGroupByIssuerHx","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2023-12-19 10:57:27","dupdate":null,"llabelSort":397},{"vcId":"1341","vcLabelCode":"1744261755506397184","vcLabelName":"RptHXSelectedAssetsMVRatio","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-08 15:36:23","dupdate":null,"llabelSort":405},{"vcId":"1361","vcLabelCode":"1745279166670049280","vcLabelName":"RptHXCptlRsv","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 10:59:13","dupdate":null,"llabelSort":406},{"vcId":"1362","vcLabelCode":"1745281992691421184","vcLabelName":"RptHXPeriodAccountingIncome","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-11 11:10:27","dupdate":null,"llabelSort":407},{"vcId":"1368","vcLabelCode":"1745629381621059584","vcLabelName":"RptHXREPOCategory","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-12 10:10:51","dupdate":null,"llabelSort":413},{"vcId":"1369","vcLabelCode":"1745696357638868992","vcLabelName":"RptEquityInvestmentManagerPerformance","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-12 14:36:59","dupdate":null,"llabelSort":414},{"vcId":"1370","vcLabelCode":"1745705941514457088","vcLabelName":"RptPositionAccountBase","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-12 15:15:04","dupdate":null,"llabelSort":415},{"vcId":"1371","vcLabelCode":"1745717832483737600","vcLabelName":"RptHXNonStandardAssetsYieldTrend","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-12 16:02:19","dupdate":null,"llabelSort":416},{"vcId":"1401","vcLabelCode":"1747791119992885248","vcLabelName":"RptHXPeriodPeerRanking","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-01-18 09:20:50","dupdate":null,"llabelSort":421},{"vcId":"1481","vcLabelCode":"1787375644422836224","vcLabelName":"RptHXFloatingPLMv","vcLabelType":null,"vcLabelMark":null,"vcCreateUser":"系统管理员","vcUpdateUser":null,"dcreate":"2024-05-06 14:55:36","dupdate":null,"llabelSort":426}],"computeCodes":[{"vcId":null,"vcAnalysobjId":" ","vcAnalysobjName":"全部","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000102","vcAnalysobjName":"产品指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206279184368641","vcAnalysobjName":"证券指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206246498713608","vcAnalysobjName":"股票指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206249655470088","vcAnalysobjName":"债券指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206245946670085","vcAnalysobjName":"基金指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000005","vcAnalysobjName":"行业","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206248684702725","vcAnalysobjName":"公司指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206245318656005","vcAnalysobjName":"产品控制指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206275563366408","vcAnalysobjName":"单产品证券持仓指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206272609448969","vcAnalysobjName":"单产品持仓按万得全球二级行业聚合指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206270609981441","vcAnalysobjName":"单产品独立持仓按行业聚合指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206274210237442","vcAnalysobjName":"单产品独立持仓按发行人聚合指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000003","vcAnalysobjName":"多产品联合单证券持仓指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206309286993929","vcAnalysobjName":"多产品联合持仓按行业聚合","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206279425203207","vcAnalysobjName":"多产品联合持仓按万得全球二级行业聚合指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000013","vcAnalysobjName":"多产品联合持仓按公司聚合指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202206244209541128","vcAnalysobjName":"多产品联合持仓按整体聚合指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202208169498506243","vcAnalysobjName":"产品管理人层指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202207076399073283","vcAnalysobjName":"字典","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202207206209044488","vcAnalysobjName":"日期","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI202207223344588808","vcAnalysobjName":"其他","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000366","vcAnalysobjName":"计量风险维度指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000368","vcAnalysobjName":"计量风险计算指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000383","vcAnalysobjName":"计量风险时序指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000404","vcAnalysobjName":"单产品独立持仓按ABS聚合","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000446","vcAnalysobjName":"产品维度","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000448","vcAnalysobjName":"资产集合","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000449","vcAnalysobjName":"股票","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000450","vcAnalysobjName":"债券","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000451","vcAnalysobjName":"基金","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10000981","vcAnalysobjName":"转债分析维度","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001002","vcAnalysobjName":"转债分析指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001061","vcAnalysobjName":"华夏","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001081","vcAnalysobjName":"市场风险维度指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001082","vcAnalysobjName":"市场风险计算指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001141","vcAnalysobjName":"华夏分析对象筛选指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001161","vcAnalysobjName":"股票专项计算维度","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001183","vcAnalysobjName":"股票专项计算指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001201","vcAnalysobjName":"绩效风险分析非标资产指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001202","vcAnalysobjName":"绩效风险分析权益投资经理业绩指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001203","vcAnalysobjName":"投资经理","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001221","vcAnalysobjName":"多产品联合持仓汇总","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001242","vcAnalysobjName":"绩效风险分析账户业绩指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001243","vcAnalysobjName":"绩效风险分析固收投资经理业绩指标","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null},{"vcId":null,"vcAnalysobjId":"VAI10001284","vcAnalysobjName":"演示产品持仓实例","vcAnalysobjTypeId":null,"vcAnalysobjDelflag":null,"vcCreateUser":null,"vcUpdateUser":null,"vcCollate":null,"dcreate":null,"dupdate":null}],"indexSetStateCodes":[{"id":null,"vcCode":" ","vcName":"全部","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":null,"vcCreateUser":null,"vcUpdateUser":null,"vcType":null,"dcreate":null,"dupdate":null},{"id":null,"vcCode":"0","vcName":"待生效","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":1,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"INDEX_SET_STATE","dcreate":null,"dupdate":null},{"id":null,"vcCode":"1","vcName":"已生效","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":2,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"INDEX_SET_STATE","dcreate":null,"dupdate":null},{"id":null,"vcCode":"2","vcName":"已失效","vcDescription":null,"vcDefault":null,"vcStatus":null,"sort":3,"vcCreateUser":null,"vcUpdateUser":null,"vcType":"INDEX_SET_STATE","dcreate":null,"dupdate":null}]},"buttons":null}}